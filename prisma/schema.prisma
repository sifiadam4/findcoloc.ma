datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}


 
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?

  isProfileComplete Boolean @default(false)
  Profile        Profile?

  accounts      Account[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id              String   @id @default(cuid())
  userId          String   @unique
  phoneNumber     String?
  date_of_birth     DateTime?
  gender          String?
  city            String?
  university      String?
  bio             String?  @db.Text
  idCardPath      String?  // Path to stored ID card document
  studentCardPath String?  // Path to stored student card document
  isVerified      Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Preferences
  smokingPreference  String? 
  petPreference     String? 
  genderPreference String?
  lifestylePreference String?
  cleanlinessPreference String?
  partyHabitsPreference String?
  guestsPreference String?
  
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
 
 
